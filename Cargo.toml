[package]
name = "liquid_nn"
version = "0.1.0"
edition = "2021"
authors = ["LiquidNN Team"]
description = "High-performance Liquid Neural Network implementation in Rust"

[dependencies]
# Core numerical libraries
liquid-core = { path = "crates/liquid-core" }
ndarray = { version = "0.16.1", features = ["rayon", "blas"] }
blas-src = { version = "0.11.1", features = ["accelerate"] }
nalgebra = "0.33.2"
num-traits = "0.2"
num_cpus = "1.16"

# Parallel processing
rayon = "1.7"
crossbeam = "0.8"
parking_lot = "0.12"

# GPU support
wgpu = { version = "25.0.0", features = ["vulkan-portability"] }
cust = { version = "0.3.2", optional = true }  # CUDA support

# Serialization and data handling
serde = { version = "1.0.219", features = ["derive"] }
bincode = "2.0.1"
rand = "0.8.5"
rand_distr = "0.4.3"

# Logging and metrics
tracing = { version = "0.1", features = ["attributes"] }
chrono = "0.4.40"
metrics = "0.24.1"

# Storage and caching
qdrant-client = "1.13.0"
iggy = "0.6.203"
memmap2 = "0.9.5"

# API and networking
tonic = "0.13.0"
prost = "0.13.5"
tokio = { version = "1.32", features = ["full"] }

# Development and profiling
criterion = { version = "0.5", optional = true }
pprof = { version = "0.14.0", features = ["flamegraph"], optional = true }

[dev-dependencies]
criterion = "0.5"
test-log = "0.2"
proptest = "1.2"
liquid-core = { path = "crates/liquid-core" }

[features]
default = ["cpu"]
cpu = []
cuda = ["dep:cust"]
profiling = ["dep:pprof"]
full = ["cpu", "cuda", "profiling"]

[[bench]]
name = "neuron_benchmarks"
harness = false

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
opt-level = 3

[profile.dev]
opt-level = 1  # Faster compilation for development

[workspace]
members = [
    "crates/liquid-core",
    "crates/liquid-gpu",
    "crates/liquid-training",
]